import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.openapi.generator" version "7.1.0"
}

sourceSets {
    main {
        java {
            srcDirs(
                    "$rootDir/src/main/java",
                    "$rootDir/build/generated/backend-service/src/main/java"
            )
        }
    }
}

idea {
    module {
        generatedSourceDirs.add(file("$rootDir/build/generated/backend-service/src/main/java"))
    }
}


group = 'ru.satvaldiev'
version = ''

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


test {
    useJUnitPlatform()
}


tasks.register("backendServiceOpenApi", GenerateTask) {
    generatorName.set("spring")
    inputSpec.set("$rootDir/src/main/resources/api/openapi.yaml")
    outputDir.set("$projectDir/build/generated")
    skipOverwrite = true
    globalProperties.set([
            models         : "",
    ])
    configOptions.set([
            modelPackage    : "ru.satvaldiev.minibank.backend.dto",
            sourceFolder    : "backend-service/src/main/java",
            library         : "spring-cloud",
            dateLibrary     : "java8",
            openApiNullable : "false",
            generateBuilders: "true",
            useOptional     : "true",
            useSpringBoot3  : "true"
    ])
}

project.tasks {
    compileJava {
        dependsOn('backendServiceOpenApi')
    }
}